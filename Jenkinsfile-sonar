pipeline {
    agent any

    environment {
        SONAR_TOKEN = credentials('SONAR_TOKEN') 
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/bengehya/myhospital-fork.git'
            }
        }

        stage('Build and Test') {
            steps {
                bat './gradlew build'
            }
        }

        stage('Check Sonar Token') {
            steps {
                script {
                    if (SONAR_TOKEN) {
                        echo "‚úÖ SONAR_TOKEN is set. First 5 chars: ${SONAR_TOKEN.take(5)}******"
                    } else {
                        error "‚ùå SONAR_TOKEN is NOT set! Check Jenkins credentials."
                    }
                }
                bat "echo SONAR_TOKEN Windows: ***** (hidden for security)"
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    echo "üöÄ Running SonarQube Analysis..."
                }
                withSonarQubeEnv('SonarScanner') { // Ensure 'SonarScanner' is correctly defined in Jenkins
                    bat "./gradlew sonar -Dsonar.login=${SONAR_TOKEN}"
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            deleteDir() // Clean up the workspace after the build
        }
        success {
            echo '‚úÖ Build and SonarQube Analysis completed successfully!'
        }
        failure {
            echo '‚ùå Build or SonarQube Analysis failed!'
        }
    }
}
